% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test.equality.sr.R
\name{test.equality.sr}
\alias{test.equality.sr}
\title{A test for the equality of switching regression models}
\usage{
test.equality.sr(Y, X, E, number.of.states = 2, model = "HMM",
  intercept = TRUE, alpha = 0.05, plot = TRUE,
  par.test = list(method = "NLM", variance.constraint = "equality",
  test.parameters = c("intercept", "beta", "sigma"), testNoMix = FALSE,
  penalty = FALSE, init = "regmix", output.pvalue = TRUE, silent = TRUE,
  theta0 = NULL))
}
\arguments{
\item{Y}{A numeric vector with observations from the target variable for all data sets.}

\item{X}{A numeric matrix with the predictor variables for all data sets.}

\item{E}{The environment indicator, can be numeric or a factor variable. 
This variable indicates which dataset the observations belong to, i.e., 
the \code{i}th entry of \code{E} should be \code{k} if the observation corresponding to the 
\code{i}th entry of \code{Y} and the \code{i}th row of the 
data matrix \code{X} comes from data set \code{k}.}

\item{number.of.states}{An integer greater or equal to 2 specifying the number of mixture components. 
Numerical experiments show poor performance of the test for more than 3 components.}

\item{model}{The dependence model for the hidden variables. If ``IID'', 
all observations are assumed to be independent. 
If ``HMM'', the hidden variables are assumed to follow a first order Markov chain.}

\item{intercept}{Logical indicating whether an intercept should 
be included in the linear regression of all components.}

\item{alpha}{Numeric between 0 and 1 indicating the desired type I error control.}

\item{plot}{Logical indicating whether diagnostic plots should be returned.#'}

\item{par.test}{A list containing the following options
\itemize{
  \item{\code{method}:}{ The algorithm to be used for likelihood optimization. 
    If ``EM'', the EM-algorithm is used (via the function \code{mixreg} from the package \code{mixtools}). 
    If ``NLM'', the Newton-type optimizer \code{nlm} is called. 
    Note: the EM-algorithm is currently only implemented for model ``IID''. 
  }
  \item{\code{variance.constraint}:}{ The constraint imposed on the error variance of the mixture components. 
    If ``equality'', all error variances are required to be equal. 
    If ``lower bound'', a lower bound is imposed (\code{1e-4} for ``NLM'' and \code{1e-16} for ``EM'').
  }
  \item{\code{test.parameters}:}{ A vector of strings indicating which parameters of the 
    switching regression models should be tested for equality. Possible entries are 
    ``intercept'' (the intercept terms), ``beta'' (the regression coefficients), 
    ``sigma'' (the error variances) and ``gamma'' (the transition matrix of the hidden Markov chain). 
    For example, if \code{test.parameters = c}(``beta'', ``sigma''), 
    then only the regression coefficients and the error variances of the switching regression models 
    are tested for equality, while intercept terms and transition matrices are allowed to vary across different models. 
  }
  \item{\code{testNoMix}:}{ Logical. If \code{TRUE}, an ordinary linear regression model 
    is fit to every data set, and a test for equality of these methods is performed (using the package \code{seqICP}). 
    If this test does not reject, its output is returned and the algorithm terminates. 
    If this test does reject, its output is disregarded and the test for equality 
    of swichting regression models is performed as usual.
  }
  \item{\code{penalty}:}{ Logical. If \code{TRUE}, a penalty term will be added to the likelihood function, 
    penalizing for the number of mixture components. Tuning parameters are automatically selected 
    using a BIC criterion. This option is beneficial if not all mixture components are ``active'' 
    in all data sets. The method will then automatically detect this, and acknowledge that no information 
    on the missing mixture component is available, rather than estimating it to coincide with another component 
    (which usually happens in the unpenalized case).
  }
  \item{\code{init}:}{ Initialization of optimization algorithms. Can be chosen to be one of ``regmix'' 
    (data driven starting values automatically calculated using the function \code{regmix.init} from the package \code{mixtools}), 
    ``random'' (randomly sampled starting values) and ``true'' (user supplied starting values, see item \code{theta0} for the format).
  }
  \item{\code{output.pvalue}:}{ Logical. If \code{TRUE}, a p-value is calculated and returned. 
    Since p-values are computed by repeated function evaluations along a grid of thresholds, 
    this option is time consuming if the number of observations is large. If \code{FALSE}, 
    the hypothesis of equality is only tested at level \code{alpha} (without calculating an actual p-value).
  }
  \item{\code{silent}:}{Logical. If \code{TRUE}, then information on the progression of the algorithm 
    is printed to the console.}
  \item{\code{theta0}:}{ Either \code{NULL} or a list containing paramter values. 
    If parameter values are supplied, 
    p-values for hypotheses (one for each supplied data set) of the true values 
    being equal to the supplied values, are computed (note: only the parameters specified in 
    \code{test.parameters} are included in the hypothesis). The supplied list \code{theta0} contains a list
    for every level of \code{E}, each of which contains the following items: 
      \code{mu}: a vector of intercept terms (one for each component);
      \code{beta}: a matrix of regression coefficients
        (each column corresponds to the vector of regression coefficients for one component);
      \code{sigma}: a vector of error variances (one for each component);
      \code{gamma}: transition matrix (the \code{(i,j)}th entry denotes 
        the transition probability from state i to state j).
  }
}}
}
\value{
Object of class \code{test} containing a list with the following items.
    \item{estimates}{ A dataframe with estimates and standard errors of all model parameters.}
    \item{loglik}{ The likelihood scores for the estimated parameters (one for each data set). 
      If \code{!is.null(theta0)}, then also likelihood scores for the supplied parameters are returned.
    }
    \item{p.value}{ A p-value for the hypothesis of equality of the switching regression models. 
      If \code{output.pvalue = FALSE}, this output is of the form \code{>= alpha} or \code{< alpha}.
    }
    \item{alpha}{ Test level.}
    \item{output.pvalue}{ Logical indicating if p-values were calculated.}
    \item{p.values.cover}{ If \code{!is.null(theta0)}, this item contains p-values for the hypotheses 
      of the true values being equal to the supplied values. If \code{output.pvalue = FALSE}, 
      this output is of the form \code{>= alpha} or \code{< alpha}. 
    }
    \item{reject}{ Logical indicating whether the test rejects at level \code{alpha}.}
    \item{model}{ The model that was used (``IID'' or ``HMM'').}
    \item{intercept}{ Logical indicating if intercept terms were fitted.}
    \item{ne}{ The number of data sets.}
    \item{K}{ The number of mixture components.}
    \item{d}{ The number of covariates (including a possible intercept term).}
}
\description{
Given several datasets containing observations from a target variable Y
and covariates X, this function tests the hypothesis of whether the datasets
are generated under the same switching regression model for the conditional
distribution of Y given X.
}
\examples{
  n <- 600
  # construct indicator for several data sets
  E <- rep(1:3, each=n/3)
  # transition matrices
  Gamma1 <- matrix(c(.98, .02,.1, .9), 2,2,byrow=TRUE)
  Gamma2 <- matrix(c(.9, .1,.1, .9), 2,2,byrow=TRUE)
  Gamma3 <- matrix(c(.9, .1,.02, .98), 2,2,byrow=TRUE)
  # hidden variables with different distributions for each data set
  H1 <- H2 <- H3 <- rep(1, n/3)
  for(t in 2:(n/3)){
    H1[t] <- sample(1:2, size=1, prob = Gamma1[H1[t-1],])
    H2[t] <- sample(1:2, size=1, prob = Gamma2[H2[t-1],])
    H3[t] <- sample(1:2, size=1, prob = Gamma3[H3[t-1],])
  }
  H <- c(H1,H2,H3)
  
  X1 <- rnorm(n)
  Y1  <- (H==1)*(1 + X1 + .5*rnorm(n)) + (H==2)*(1 + 2*X1 + .7*rnorm(n))
  
  # The intercept, regression coefficients and error variances 
  # for the switching regression models of Y1 given X1 coincide
  test1 <- test.equality.sr(Y = Y1, X = X1, E = E, 
                            par.test = list(test.parameters = c("intercept", "beta", "sigma"), 
                                            output.pvalue = TRUE)
                           )
  test1
  
  X2 <- rnorm(n)
  Y2  <- (H==1)*(1 + E*X2 + .5*rnorm(n)) + (H==2)*(E + 2*X2 + .7*rnorm(n))
  
  # For the switching regression models of Y2 given X2, they do not
  test2 <- test.equality.sr(Y = Y2, X = X2, E = E, 
                            par.test = list(test.parameters = c("intercept", "beta", "sigma"), 
                                            output.pvalue = TRUE)
                           )
  test2

}
\seealso{
\code{\link{icph}}
}
\author{
Rune Christiansen \email{krunechristiansen@math.ku.dk}
}
