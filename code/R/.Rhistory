geom_tile(aes(fill=value)) + scale_fill_continuous(trans = "my")
f <- function(x) x^3
ff <- function(x) x^(1/3)
myy_trans <- function(){
trans_new('myy', function(x) f(x), function(x) ff(x), breaks = seq(0,1,.1), domain = c(-Inf, Inf))
}
ggplot(subset(pval.frame, method == "NLM" & arbvar == FALSE), aes(beta, p.value)) +
geom_tile(aes(fill=value)) + scale_fill_continuous(trans = "myy")
f(ff(seq(0,1,.01)))
my_trans <- function(){
trans_new('my', transform = function(x) scale_trans(x), inverse = function(x) ascale_trans(x), breaks = seq(0,1,.1), domain = c(-Inf, Inf))
}
ggplot(subset(pval.frame, method == "NLM" & arbvar == FALSE), aes(beta, p.value)) +
geom_tile(aes(fill=value)) + scale_fill_continuous(trans = "my")
myy_trans <- function(){
trans_new('myy', transform = function(x) f(x), inverse = function(x) ff(x), breaks = seq(0,1,.1), domain = c(-Inf, Inf))
}
ggplot(subset(pval.frame, method == "NLM" & arbvar == FALSE), aes(beta, p.value)) +
geom_tile(aes(fill=value)) + scale_fill_continuous(trans = "myy")
f <- function(x) pnorm(x)
ff <- function(x) qnorm(x)
myy_trans <- function(){
trans_new('myy', transform = function(x) f(x), inverse = function(x) ff(x), breaks = seq(0,1,.1), domain = c(-Inf, Inf))
}
ggplot(subset(pval.frame, method == "NLM" & arbvar == FALSE), aes(beta, p.value)) +
geom_tile(aes(fill=value)) + scale_fill_continuous(trans = "myy")
n <- 100
E <- rep(1:3, each = n)
n <- 100
E <- rep(1:3, each = n)
X3 <- E + rnorm(3*n)
X4 <- .5*X3 + .1*rnorm(3*n)
X1 <- -.3*X4 + X3 + .2*rnorm(3*n)
Y <- X1 + X4 + .2*rnorm(3*n)
X2 <- X3 - X4 + .4*rnorm(3*n)
########## Plots for poster
n <- 300
E <- rep(1:3, each = n/3)
X3 <- E + rnorm(n)
X4 <- .5*X3 + .1*rnorm(n)
X1 <- -.3*X4 + X3 + .2*rnorm(n)
Y <- X1 + X4 + .2*rnorm(n)
X2 <- X3 - X4 + .4*rnorm(n)
dat <- data.frame(time=1:n, value = c(X3, X1, X4, Y, X2),
variable = rep(c("X3", "X1", "X4", "Y", "X2"), each = n))
library(ggplot2)
library(reshape2)
ggplot(dat, aes(time, value)) + geom_line() + facet_grid(variable~.)
dat <- data.frame(time=1:n, value = c(X3, X1, X4, Y, X2),
variable = factor(rep(c("X3", "X1", "X4", "Y", "X2"), each = n)))
ggplot(dat, aes(time, value)) + geom_line() + facet_grid(variable~.)
dat <- data.frame(time=1:n, value = c(X3, X1, X4, Y, X2),
variable = factor(rep(c("X3", "X1", "X4", "Y", "X2"), each = n),
levels = c("X3", "X1", "X4", "Y", "X2")))
ggplot(dat, aes(time, value)) + geom_line() + facet_grid(variable~.)
theme_set(theme_bw())
ggplot(dat, aes(time, value)) + geom_line() + facet_grid(variable~.)
x = 10
1267.8992-1350.89
1267.92-1350.89
1267.92-1350.89/2
seqICP::seqICP.s
environment()
seqICP.s
load(seqICP)
load("seqICP")
loadNamespace("seqICP")
seqICP.s
library(seqICP)
seqICP.s
rm(seqICP)
unloadNamespace("seqICP")
seqICP::seqICP.s
loadNamespace("seqICP")
library(seqICP)
?nlm
gridExtra::grid.draw
grid::grid.draw
ggplot2::ggplot
ggplot2::ggplotGrob
install.packages("roxygen2")
source("test.equality.sr.R", chdir = TRUE)
?@keywords
?keywords
setwd("~/Desktop/icph_examples_figures_package/icph/R")
source("test.equality.sr.R")
library(ggplot2)
library(reshape2)
library(lattice)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2,
model = "HMM", intercept = TRUE,
alpha = 0.05, plot = TRUE,
par.test = list(method = "NLM",
variance.constraint = "equality",
test.parameters = c("intercept", "beta", "sigma"),
output.pvalue = TRUE)
)
library(icph)
library(InvariantCausalPrediction)
library(icph)
theme_set(theme_bw())
set.seed(18)
n <- 600
E <- rep(1:3, each = n/3)
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "HMM",
intercept = TRUE, alpha = 0.05, plot = T)
library(icph)
library(icph)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
# res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
#                               number.of.states = 2, model = "HMM",
#                               intercept = TRUE, alpha = 0.05, plot = T)
# res.test1
## h-invariance of S={1}
test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "HMM",
intercept = TRUE, alpha = 0.05, plot = T)
test.equality.sr
detach(icph)
detach("package:icph", unload = TRUE)
test.equality.sr
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "HMM",
intercept = TRUE, alpha = 0.05, plot = T)
res.test1
detach("package:icph", unload = TRUE)
icph
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "HMM",
intercept = TRUE, alpha = 0.05, plot = T)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 3, model = "HMM",
intercept = TRUE, alpha = 0.05, plot = T)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "IID",
intercept = TRUE, alpha = 0.05, plot = T)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "IID",
intercept = FALSE, alpha = 0.05, plot = T)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "IID",
intercept = TRUE, alpha = 0.05, plot = T,
par.test = list(variance.constraint = "lower bound"))
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E,
number.of.states = 2, model = "IID",
intercept = TRUE, alpha = 0.05, plot = T,
par.test = list(variance.constraint = "lower bound",
method = "EM"))
mixtools::regmixEM
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
res.test2 <- test.equality.sr(Y = Y, X = X2, E = E)
res.test2
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
D <- cbind(Y, X1, X2, X3)
dd <- data.frame(value = c(X1, X2, X3, Y),
variable = factor(rep(c("X1", "X2", "X3", "Y"), each=n),
levels = c("Y", "X1", "X2", "X3")),
H = factor(rep(H, 4)),
time = rep(1:n, 4),
E = factor(rep(E,4)))
switches <- which(H[-1]-H[-n] !=0)
rects <- data.frame(xstart = c(1,switches), xend = c(switches,n),
col = factor(rep(c(1:2), n)[1:(length(switches)+1)]))
## Timeseries plots
ggplot() +
geom_rect(data = rects, aes(xmin = xstart, xmax = xend, ymin = -Inf, ymax = Inf, fill=col), alpha=.4) +
geom_line(data = dd, aes(time, value)) +
facet_grid(variable~., scales = "free") +
scale_fill_manual(name = "",
values = c("#333333", "#999999"),
labels = c("H=1", "H=2")) +
ylab("")
splom(D, groups = H, col=c(1,2), pch = c(1,2), size=.1,
panel=panel.superpose,
key=list(title="",
columns=2,
points=list(pch=c(1,2),
col=c(1,2)),
text=list(c("H=1","H=2"))))
res.icph <- icph(D=D, E=E, target = 1, par.icp = list(output.pvalues = TRUE))
res.icph
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
detach("package:icph", unload = TRUE)
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
print(res.test1)
print.test(res.test1)
icph::print.test(res.test1)
icph:::print.test(res.test1)
detach("package:icph", unload = TRUE)
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## h-invariance of S={1} is rejected
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
detach("package:icph", unload = TRUE)
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## h-invariance of S={1} is rejected
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
print(res.test1)
detach("package:icph", unload = TRUE)
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# source("../icph.R", chdir = TRUE)
# library(ggplot2)
# library(reshape2)
# library(lattice)
library(icph)
theme_set(theme_bw())
set.seed(18)
# sample size
n <- 600
# environment indicator
E <- rep(1:3, each = n/3)
## Transition probabilities for hidden Markov Chain
# Different in each environment
Gamma <- list(matrix(c(.98, .02,
.1, .9), 2,2,byrow=T),
matrix(c(.9, .1,
.1, .9),2,2, byrow=T),
matrix(c(.9, .1,
.02, .98),2,2, byrow=T))
# hidden Markov Chain
H <- rep(1, n)
for(t in 2:n){
H[t] <- sample(1:2, size=1, prob = Gamma[[E[t]]][H[t-1],])
}
# Observed data -- here S* = {2}
X3 <- H * rnorm(n)
X2 <- H + cos((1:n)*2*pi/n)*X3 + .5*rnorm(n)
Y <- (H==1)*(1 + X2 + .5*rnorm(n)) + (H==2)*(1 + 2*X2 + .7*rnorm(n))
X1 <- .5 - X2 + exp(-3*(1:n)/n)*Y + .7*rnorm(n)
d <- data.frame(Y=Y, X1=X1, X2=X2, X3=X3, H=factor(H),
E = factor(E, labels = c("environment 1", "environment 2", "environment 3")))
## S={1} is NOT h-invariant
ggplot(d, aes(X1, Y)) + geom_point(aes(shape = H), alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## S={2} IS h-invariant
ggplot(d, aes(X2, Y)) + geom_point(aes(shape = H), col= "#339900", alpha = 0.7, size = 2.5) +
facet_grid(.~E)
## h-invariance of S={1} is rejected
res.test1 <- test.equality.sr(Y = Y, X = X1, E = E)
res.test1
